{"version":3,"file":"bundle.js","sources":["../src/main.js"],"sourcesContent":["function _Event(option) {\r\n    let { cache } = option\r\n    let eventList = new Map();\r\n    let emitList = new Map();\r\n    // 在线订阅函数\r\n    function on(type, ...fn) {\r\n        let fns = eventList.get(type);\r\n        if (Array.isArray(fns)) {\r\n            eventList.set(type, [...fn].concat(...fns))\r\n        } else {\r\n            eventList.set(type, [...fn])\r\n        }\r\n    }\r\n    //离线订阅函数\r\n    function on_offline(type, ...fn) {\r\n        on(type, ...fn)\r\n        if (cache) {\r\n            if (emitList.has(type)) {\r\n                emitList.get(type).forEach(item => {\r\n                    [...fn].forEach(f => {\r\n                        f(item)\r\n                    })\r\n                })\r\n            }\r\n        } else {\r\n            console.warn('option.cache is not true')\r\n        }\r\n    }\r\n    // 发布函数\r\n    function emit(type, ...msg) {\r\n        // if option.cache === true\r\n        let currentMsg = [...msg];\r\n        if (Boolean(cache)) {\r\n            if (emitList.has(type)) {\r\n                currentMsg.push(emitList.get(type))\r\n            }\r\n            emitList.set(type, currentMsg)\r\n        }\r\n        let fns = eventList.get(type);\r\n        if (Array.isArray(fns)) {\r\n            fns.forEach(fn => {\r\n                currentMsg.forEach(msg => {\r\n                    fn(msg)\r\n                })\r\n            })\r\n        }\r\n    }\r\n    // 取消订阅函数\r\n    function off(type, ...fn) {\r\n        let fns = eventList.get(type);\r\n        if (Array.isArray(fns)) {\r\n            if ([...fn].length > 0) {\r\n                let filterFns = fns.filter(item => ![...fn].includes(item));\r\n                eventList.set(type, filterFns);\r\n            } else {\r\n                eventList.set(type, [])\r\n            }\r\n        }\r\n    }\r\n    // 获取订阅事件列表\r\n    function get_event_list() {\r\n        return eventList\r\n    }\r\n    function get_emit_list() {\r\n        return emitList\r\n    }\r\n    return {\r\n        on,\r\n        emit,\r\n        off,\r\n        on_offline,\r\n        get_emit_list,\r\n        get_event_list\r\n    }\r\n}\r\n\r\nexports.default = Event;\r\n\r\nconst e = new _Event({});\r\n\r\n\r\n// console.log('Basic usage===')\r\n// e.on('msg', function (arg) { console.log(arg) })\r\n// e.emit('msg', 'hello')\r\n// console.log('Basic usage===')\r\n\r\n\r\n\r\n// console.log('Multiple on function')\r\n// e.on('msg', function(arg) {\r\n//     console.log(`fun1:${arg}`)\r\n// }, function(arg) {\r\n//     console.log(`fun2:${arg}`)\r\n// })\r\n// e.emit('msg', 'hello')\r\n// console.log('Multiple on function')\r\n\r\n\r\n// console.log('Multiple emit msg')\r\n// e.on('msg', function(arg) {\r\n//     console.log(`fun1:${arg}`)\r\n// })\r\n// e.emit('msg', 'hello1', 'hello2')\r\n\r\n// console.log('Multiple emit msg')\r\n\r\n"],"names":["Event"],"mappings":"aA4EA,cAAkBA"}